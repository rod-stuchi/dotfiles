# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false

format = """
$directory\
${custom.giturl}$git_branch$git_commit$git_state$git_status$git_metrics\
$line_break\
$username\
$hostname\
$cmd_duration$jobs$shlvl$sudo$character"""

right_format = """
$nodejs\
$python\
$terraform\
$golang\
$lua\
$kubernetes\
$rust\
$ruby\
$aws"""

[git_commit]
commit_hash_length = 5
tag_symbol = '🔖 '

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = 'gray'
# ahead = '⇡${count}'
# behind = '⇣${count}'
# diverged = '⇕⇡${ahead_count}⇣${behind_count}'
ahead = ' ${count}'
behind = ' ${count}'
diverged = '\(󰹺  ${ahead_count} ${behind_count}\)'
staged = '[\(+$count\)](green)'
deleted = '[\(-$count\)](red)'
untracked = ''
up_to_date = ' [ ](green)'

[git_metrics]
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
disabled = false

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = '[🍒 PICKING](bold red)'

[cmd_duration]
min_time = 500
format = ' [$duration](bold yellow) '

[directory]
truncation_length = 6
truncation_symbol = '…/'
# read_only = ' 🔒'
read_only = '󰌾 '
read_only_style = 'green'

[line_break]
disabled = false

[aws]
disabled = false
format = '[$symbol$profile ]($style)'
style = 'bold blue'
symbol = '󰸏 '
[aws.profile_aliases]
default = 'PROD'
qa = 'QA'

[nodejs]
format = '[$symbol($version )]($style)'
detect_files = ['package.json', 'yarn.lock']
detect_extensions = []
style = 'green'

[python]
format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'

[golang]
format = '[$symbol($version )]($style)'
detect_files = ['go.mod']
symbol = ' '

[lua]
format = '[$symbol($version )]($style)'

[terraform]
format = '[$symbol$workspace $version]($style) '

[kubernetes]
format = '$symbol[$context]($style) '
disabled = true
contexts = [
  { context_pattern = ".*744894293558.*/(?P<name>[a-z-_]+)$", context_alias = "PRD $name", style = "dimmed red", symbol = "🔴 " },
  { context_pattern = ".*437642595153.*/(?P<name>[a-z-_]+)$", context_alias = "QA $name", style = "green", symbol = "🟢 " },
]

[ruby]
format = '[$symbol($version )]($style)'

[rust]
format = '[$symbol($version )]($style)'

[shlvl]
disabled = false
threshold = 4
repeat = false
symbol = ' '

[sudo]
format = '[$symbol]($style)'
disabled = false

[hostname]
format = '[$ssh_symbol$hostname]($style) '
aliases = { "Mac-JXYQ00X0QW" = "mpb-m4" }

[username]
format = '[$user]($style) '

[character]
# ● 󰌢 ﮊ ☣  💀 󰒋     
success_symbol            = '[ ](bold green)'
error_symbol              = '[ ](bold red)'
vimcmd_symbol             = '[ ](bold green)'
vimcmd_replace_one_symbol = '[ ](bold purple)'
vimcmd_replace_symbol     = '[ ](bold purple)'
vimcmd_visual_symbol      = '[ ](bold yellow)'

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

# from: https://github.com/starship/starship/discussions/1252#discussioncomment-7923685
[custom.distrobox]
disabled = false
command = """
if [[ -n $DISTROBOX_ENTER_PATH ]]; then
 echo "$(cat /etc/os-release | grep PRETTY_NAME | cut -d '"' -f 2)"
else
 echo ""
fi
"""
when = "test -n $(DISTROBOX_ENTRY_PATH)"
format = " 󰆧 $output"

[custom.giturl]
disabled = true
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "at $output  "
